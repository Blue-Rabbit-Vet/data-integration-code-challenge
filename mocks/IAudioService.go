// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	DTO "audioTest/src/infrastructure/DTO"

	mock "github.com/stretchr/testify/mock"
)

// IAudioService is an autogenerated mock type for the IAudioService type
type IAudioService struct {
	mock.Mock
}

// GetInfo provides a mock function with given fields: _a0
func (_m *IAudioService) GetInfo(_a0 string) (*DTO.AudioResponseDTO, error) {
	ret := _m.Called(_a0)

	var r0 *DTO.AudioResponseDTO
	if rf, ok := ret.Get(0).(func(string) *DTO.AudioResponseDTO); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*DTO.AudioResponseDTO)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInfoList provides a mock function with given fields: _a0
func (_m *IAudioService) GetInfoList(_a0 int) (*[]DTO.AudioResponseDTO, error) {
	ret := _m.Called(_a0)

	var r0 *[]DTO.AudioResponseDTO
	if rf, ok := ret.Get(0).(func(int) *[]DTO.AudioResponseDTO); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]DTO.AudioResponseDTO)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreFile provides a mock function with given fields: _a0, _a1
func (_m *IAudioService) StoreFile(_a0 []byte, _a1 string) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, string) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
